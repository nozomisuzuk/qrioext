<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" /><title>Key Server</title>
	<meta http-equiv="Pragma" content="no-cache">
	<meta name="viewport" content="user-scalable=no"/>
</head>
<style>
    html {
      font-family: Arial, Helvetica, sans-serif;
      text-align: center;
    }
    h1 {
      /* font-size: 1.8rem; */
      font-size: 3.6rem;
      color: white;
    }
    h2{
      /* font-size: 1.5rem; */
      font-size: 3.0rem;
      font-weight: bold;
      color: #143642;
    }
    .topnav {
      overflow: hidden;
      background-color: #143642;
      width: 100%;
    }
    body {
      background-color:#CDCDCD;
      margin: 0 auto;
    }
    .switch {
      padding: 1px 10px 30px;
    }
    .circle{
      padding: auto;
      width: 600px;
      height: 600px;
      margin: 0px auto;
      font-size: 130px;
      text-align: center;
      line-height: 600px;
      border-radius: 50%;
      background-color: white;
      box-shadow: 2px 2px 12px 1px rgba(140,140,140,.5);
    }
    .button{
      width: 500px;
      height: 500px;
      border-radius: 50%;
      font-size: 130px;
      font-weight: bold;
      text-align: center;
      color: #fff;
      line-height: 500px;
      background-color: #0f8b8d;
      border: none;
      cursor: pointer;
      outline: none;
      padding: 0;
      appearance: none;
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -khtml-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }
    .button:active {
      background-color: rgba(134, 12, 28, 0.726);
      box-shadow: 2 2px #CDCDCD;
      transform: translateY(3px);
    }
    .information {
      margin: 0 auto;
      padding: 1px;
      width: 100%;
      height: 50px;
      text-align: center;
      line-height: 3em;
    }
    .name {
      font-size: 3.5rem;
      color: #143642;
      font-weight: bold;
     }
    .content {
      padding: 30px 50px 40px;
      max-width: 750px;
      margin: 0 auto;
    }
    .card {
      background-color: #F8F7F9;
      box-shadow: 2px 2px 12px 1px rgba(140,140,140,.5);
      padding: 10px 40px;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
    }
    .close {
      flex: 1;
      border-radius: 5%;
      width:320px;
      height: 150px;
      font-size: 100px;
      text-align: center;
      outline: none;
      color: #ffff;
      background-color: #0890c1;
      border: none;
      border-radius: 5px;
    }
    .close:active {
      background-color: rgba(134, 12, 28, 0.726);
      box-shadow:2 2px #CDCDCD;
      transform: translateY(3px);
    }
    .state-check{
      flex: 1;
      border-radius: 5%;
      width: 320px;
      height: 150px;
      /* font-size: 24px; */
      font-size: 40px;
      text-align: center;
      overflow-wrap: break-word;
      outline: none;
      color: #fff;
      background-color: #143642;
      border: none;
      border-radius: 5px;
    }
    .state-check:active{
      background-color: rgba(1, 0, 59, 0.726);
      box-shadow: 2 2px #CDCDCD;
      transform: translateY(3px);
    }
</style>
<script type="text/javascript">
    var sock = new WebSocket('ws://192.168.2.98:3030/');

    sock.addEventListener('open',function(e){// 接続
        console.log('Socket 接続成功');
    });

    sock.addEventListener('message',function(e){// サーバーからデータを受け取る
        console.log(e.data);
        if(e.data == "message:esp32ok"){
          var now = new Date();
          text0.innerHTML = "WS (98-esp32) is alive!!";
          text1.innerHTML = now.getMonth()+1 + "月" + now.getDate() + "日" + now.getHours() + "時" + now.getMinutes() + "分" + now.getSeconds() + "秒";
        }
        else if(e.data == "message:esp32:unlock"){
          var now = new Date();
          text0.innerHTML = " Unlock!!";
          text1.innerHTML = now.getMonth()+1 + "月" + now.getDate() + "日" + now.getHours() + "時" + now.getMinutes() + "分" + now.getSeconds() + "秒";
        }
	else if(e.data == "message:esp32:close"){
	  var now = new Date();
	  text0.innerHTML = "Lock!!";
	  text1.innerHTML = now.getMonth()+1 + "月" + now.getDate() + "日" + now.getHours() + "時" + now.getMinutes() + "分" + now.getSeconds() + "秒";
	}
        else if(e.data == "message:Hello Server"){
          text0.innerHTML = " esp32 connected just now";
          text1.innerHTML = " ";
        }
        else if(e.data == "websocket_connect"){
          text0.innerHTML = "WS (sp-98) is alive!!";
          text1.innerHTML = " ";
        }
    });

    //count interval in putting button
    let counts=0;
    function countdown(){
      if(counts>0)
        counts --; 
    }
    setInterval(countdown,1000);

    document.addEventListener('DOMContentLoaded',function(e){
        document.getElementById('button').addEventListener('click',function(e){
          text0.innerHTML = " ... ";
          text1.innerHTML = " ";
          if(counts == 0){
            sock.send('do');// WebSocketでサーバーに文字列を送信
            counts = 5;
          }
        });
	document.getElementById('close').addEventListener('click',function(e){
	  text0.innerHTML = " ... " ;
	  text1.innerHTML = " ";
	  sock.send('off');
	});
        document.getElementById('state-check').addEventListener('click',function(e){
          text0.innerHTML = " ... ";
          text1.innerHTML = " ";  
          console.log("check");
          sock.send('state-check');// WebSocketでサーバーに文字列を送信
        });
    });
</script>
</head>

<body>
    <div class="topnav">
        <h1>Qrio Ext.</h1>
    </div>
    <div class="information">
      <p class="name">user: <%= Name %> </p>
    </div>
    <div class="switch">
      <div class="circle" id="circle">
          <p><button id="button" class="button">Unlock</button></p> 
      </div>
    </div>
    <div class="content">
      <div class="card" id="card">
        <p><button id="state-check" class="state-check">esp32 state check</button></p>   
        <p><button id="close" class="close">Lock</button></p>
      </div>
    </div>
    <div>
      <h2 id="text0"></h2><h2 id="text1"></h2>
    </div>
</body>
<script>
  let state = 0;
  const $button = document.getElementById("button");
  const $statuscheck = document.getElementById("state-check");
  const $close = document.getElementById("close");
  const $circle = document.getElementById("circle");
  const $card = document.getElementById("card");
  const $text = document.getElementById("text0");
  window.addEventListener('DOMContentLoaded',function(){
    let Interval2 = setInterval(() => {
	let Interval1 = setInterval(() => {
			if(state == 0){
				$button.style.visibility ="hidden";
				$statuscheck.style.visibility ="hidden";
				$close.style.visibility = "hidden";
				$circle.style.backgroundColor ="#CDCDCD";
				$text.style.color="rgba(124, 11, 26, 0.726)";
				$card.style.backgroundColor ="#CDCDCD"
				text0.innerHTML = "ロードしてください";
				text1.innerHTML = " ";
			}
		},500);
	if(state == 1){
			state =0;
		}
	sock.send('ping');
	sock.addEventListener('message', function(e){
			if(e.data == 'pong'){
					state = 1;
					clearInterval(Interval1);
				}
		});
	},1000);
  });
</script>
</html>
